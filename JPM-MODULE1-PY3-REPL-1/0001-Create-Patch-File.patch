From 4174cd83a824b2f185d066793a61960cac86b525 Mon Sep 17 00:00:00 2001
From: Revathy Narayanan <revathyn1998@gmail.com>
Date: Fri, 26 Mar 2021 21:46:16 +0000
Subject: [PATCH] Create Patch File

---
 __pycache__/client3.cpython-38.pyc | Bin 0 -> 1023 bytes
 client3.py                         |  29 ++++++++++++++---------------
 client_test.py                     |   7 ++++++-
 3 files changed, 20 insertions(+), 16 deletions(-)
 create mode 100644 __pycache__/client3.cpython-38.pyc

diff --git a/__pycache__/client3.cpython-38.pyc b/__pycache__/client3.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..e27a2a375f40a4893f2774737631c3b331cbc90a
GIT binary patch
literal 1023
zcmYjQO;giA7~V}bX$md!QHmWd^}uLngu-w^1{I|^jsumC>46<JhVBal+N5l@GlK02
zul|Q}^ly0ZN9@%TcTb*tvlWKTykEO-cAq@YrjgH&5FFndpFZb3LVl;k{gK6D9WD8V
zP7py`gi{kOZkcFv+eF5hu(%^^?g}QHZ-i%rD>4{8$O`Ywl0RVt+$&lmAHVQXum?Gy
zr}@DcID-ek2JD(#(`z~yPa~fQ37>=s>|Nwjkb$Wy`hoERpXNnA12ZrQg*5^XMHUJ$
z4MmtaVnuRADLGd-I|3d|iqR55pDU3o>;KwYLH9`|e}msb>X(mBl<KTjtF5>hv`*qg
zt*$JtELP9EATM5q;`!Hp_=ghGM7tXfW(;iuEm=p`LrzMhPgR;(B_eD*kM=E7v%A{v
zSv`A(2xpe`S&ybwj~y{Y<JPs4sJMBiGb--*hoR6;M}|!p)<JT1W8pa!s-2@&9H@$;
zo%3$2K&I0=i!b=Y{w($mQ<*~iLF6cgzt5^CaT}_#8$}?i?{>E5x8K(qTboPsI|s}2
zdz(93)zePfZ^xqB0)MI6Y=sc1<%Q0L&K-lQ1uEEy!$_5Jv&7sM>d|q0a#ZGVu9@Pv
z9ciAL;irH}j|z&~=LFeDhI(`sW5ue=lvIPSV)2Z@?+3TZp;;KZ9QJ7saqI;uj2~l_
zxabICU{sEoRo`z1VdVRlk9SjIM0qYL2dex8sac&%o|cgp6U{N0RW3cV8}@1Y)$0vy
z*EZi&N_?y<TdnYLK?2@^L~(amYo@|BaCVx+5qD(}iMY+3-NxqLfu?oC!5xq&XoK%-
z2fL0zQ_N5^k?_pzo*CRT?m(p7qgb{BrJ004XxB)ZaMxf=B>s!U2rSb-P^PpSQO(_m
q)IEYyjpdM~wV{SDrg17Mqw|m@d~9Yj%gcDKhnkfs=BS=Wi}W9Wg7h^2

literal 0
HcmV?d00001

diff --git a/client3.py b/client3.py
index f1771c3..e3eb87b 100644
--- a/client3.py
+++ b/client3.py
@@ -30,30 +30,29 @@ QUERY = "http://localhost:8080/query?id={}"
 N = 500
 
 def getDataPoint(quote):
-	""" Produce all of the needed values to generate a datapoint """
-	""" ------------- Update this function ------------- """
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price + ask_price)/2
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
-	""" Get ratio of price_a and price_b """
-	""" ------------- Update this function ------------- """
-	""" Also create some unit tests for this function in client_test.py """
-	return 1
+  if(price_b == 0):
+    return 
+  return price_a / price_b
 
 # Main
 if __name__ == "__main__":
+  for _ in (range(N)):
+    quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+    prices = {}
 
-	# Query the price once every N seconds.
-	for _ in iter(range(N)):
-		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+    for quote in quotes:
+      stock, bid_price, ask_price, price = getDataPoint(quote)
+      prices[stock] = price
+      print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+    print ("Ratio %s" % (getRatio(prices['ABC'],prices['DEF'])))
+
+  
 
-		""" ----------- Update to get the ratio --------------- """
-		for quote in quotes:
-			stock, bid_price, ask_price, price = getDataPoint(quote)
-			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-		print ("Ratio %s" % getRatio(price, price))
diff --git a/client_test.py b/client_test.py
index af2bf26..f582381 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,6 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
+from client3 import *
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,12 +9,16 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask'] ['price'])/ 2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price']) / 2))
     """ ------------ Add the assertion below ------------ """
 
 
-- 
2.17.1

